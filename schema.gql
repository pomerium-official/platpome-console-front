# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateAttachFile {
  _avg: AttachFileAvgAggregate
  _count: AttachFileCountAggregate
  _max: AttachFileMaxAggregate
  _min: AttachFileMinAggregate
  _sum: AttachFileSumAggregate
}

type AggregateBoard {
  _avg: BoardAvgAggregate
  _count: BoardCountAggregate
  _max: BoardMaxAggregate
  _min: BoardMinAggregate
  _sum: BoardSumAggregate
}

type AggregateCode {
  _avg: CodeAvgAggregate
  _count: CodeCountAggregate
  _max: CodeMaxAggregate
  _min: CodeMinAggregate
  _sum: CodeSumAggregate
}

type AggregateCodeGroup {
  _avg: CodeGroupAvgAggregate
  _count: CodeGroupCountAggregate
  _max: CodeGroupMaxAggregate
  _min: CodeGroupMinAggregate
  _sum: CodeGroupSumAggregate
}

type AggregateMember {
  _avg: MemberAvgAggregate
  _count: MemberCountAggregate
  _max: MemberMaxAggregate
  _min: MemberMinAggregate
  _sum: MemberSumAggregate
}

type AggregateMemberDevice {
  _avg: MemberDeviceAvgAggregate
  _count: MemberDeviceCountAggregate
  _max: MemberDeviceMaxAggregate
  _min: MemberDeviceMinAggregate
  _sum: MemberDeviceSumAggregate
}

type AggregateMemberNotification {
  _avg: MemberNotificationAvgAggregate
  _count: MemberNotificationCountAggregate
  _max: MemberNotificationMaxAggregate
  _min: MemberNotificationMinAggregate
  _sum: MemberNotificationSumAggregate
}

type AggregateNotification {
  _avg: NotificationAvgAggregate
  _count: NotificationCountAggregate
  _max: NotificationMaxAggregate
  _min: NotificationMinAggregate
  _sum: NotificationSumAggregate
}

type AttachFile {
  delYn: String
  fileChgName: String
  fileExt: String
  fileName: String!
  filePath: String!
  fileSize: Int
  fileThumbUrl: String
  fileUrl: String
  id: Int!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

type AttachFileAvgAggregate {
  fileSize: Float
  id: Float
  modId: Float
  regId: Float
}

input AttachFileAvgOrderByAggregateInput {
  fileSize: SortOrder
  id: SortOrder
  modId: SortOrder
  regId: SortOrder
}

type AttachFileCountAggregate {
  _all: Int!
  delYn: Int!
  fileChgName: Int!
  fileExt: Int!
  fileName: Int!
  filePath: Int!
  fileSize: Int!
  fileThumbUrl: Int!
  fileUrl: Int!
  id: Int!
  modDt: Int!
  modId: Int!
  regDt: Int!
  regId: Int!
}

input AttachFileCountOrderByAggregateInput {
  delYn: SortOrder
  fileChgName: SortOrder
  fileExt: SortOrder
  fileName: SortOrder
  filePath: SortOrder
  fileSize: SortOrder
  fileThumbUrl: SortOrder
  fileUrl: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

input AttachFileCreateInput {
  delYn: String
  fileChgName: String
  fileExt: String
  fileName: String!
  filePath: String!
  fileSize: Int
  fileThumbUrl: String
  fileUrl: String
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

input AttachFileCreateManyInput {
  delYn: String
  fileChgName: String
  fileExt: String
  fileName: String!
  filePath: String!
  fileSize: Int
  fileThumbUrl: String
  fileUrl: String
  id: Int
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

type AttachFileGroupBy {
  _avg: AttachFileAvgAggregate
  _count: AttachFileCountAggregate
  _max: AttachFileMaxAggregate
  _min: AttachFileMinAggregate
  _sum: AttachFileSumAggregate
  delYn: String
  fileChgName: String
  fileExt: String
  fileName: String!
  filePath: String!
  fileSize: Int
  fileThumbUrl: String
  fileUrl: String
  id: Int!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

type AttachFileMaxAggregate {
  delYn: String
  fileChgName: String
  fileExt: String
  fileName: String
  filePath: String
  fileSize: Int
  fileThumbUrl: String
  fileUrl: String
  id: Int
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

input AttachFileMaxOrderByAggregateInput {
  delYn: SortOrder
  fileChgName: SortOrder
  fileExt: SortOrder
  fileName: SortOrder
  filePath: SortOrder
  fileSize: SortOrder
  fileThumbUrl: SortOrder
  fileUrl: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

type AttachFileMinAggregate {
  delYn: String
  fileChgName: String
  fileExt: String
  fileName: String
  filePath: String
  fileSize: Int
  fileThumbUrl: String
  fileUrl: String
  id: Int
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

input AttachFileMinOrderByAggregateInput {
  delYn: SortOrder
  fileChgName: SortOrder
  fileExt: SortOrder
  fileName: SortOrder
  filePath: SortOrder
  fileSize: SortOrder
  fileThumbUrl: SortOrder
  fileUrl: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

input AttachFileOrderByWithAggregationInput {
  _avg: AttachFileAvgOrderByAggregateInput
  _count: AttachFileCountOrderByAggregateInput
  _max: AttachFileMaxOrderByAggregateInput
  _min: AttachFileMinOrderByAggregateInput
  _sum: AttachFileSumOrderByAggregateInput
  delYn: SortOrder
  fileChgName: SortOrder
  fileExt: SortOrder
  fileName: SortOrder
  filePath: SortOrder
  fileSize: SortOrder
  fileThumbUrl: SortOrder
  fileUrl: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

input AttachFileOrderByWithRelationInput {
  delYn: SortOrder
  fileChgName: SortOrder
  fileExt: SortOrder
  fileName: SortOrder
  filePath: SortOrder
  fileSize: SortOrder
  fileThumbUrl: SortOrder
  fileUrl: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

enum AttachFileScalarFieldEnum {
  delYn
  fileChgName
  fileExt
  fileName
  filePath
  fileSize
  fileThumbUrl
  fileUrl
  id
  modDt
  modId
  regDt
  regId
}

input AttachFileScalarWhereWithAggregatesInput {
  AND: [AttachFileScalarWhereWithAggregatesInput!]
  NOT: [AttachFileScalarWhereWithAggregatesInput!]
  OR: [AttachFileScalarWhereWithAggregatesInput!]
  delYn: StringNullableWithAggregatesFilter
  fileChgName: StringNullableWithAggregatesFilter
  fileExt: StringNullableWithAggregatesFilter
  fileName: StringWithAggregatesFilter
  filePath: StringWithAggregatesFilter
  fileSize: IntNullableWithAggregatesFilter
  fileThumbUrl: StringNullableWithAggregatesFilter
  fileUrl: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  modDt: DateTimeNullableWithAggregatesFilter
  modId: IntNullableWithAggregatesFilter
  regDt: DateTimeNullableWithAggregatesFilter
  regId: IntNullableWithAggregatesFilter
}

type AttachFileSumAggregate {
  fileSize: Int
  id: Int
  modId: Int
  regId: Int
}

input AttachFileSumOrderByAggregateInput {
  fileSize: SortOrder
  id: SortOrder
  modId: SortOrder
  regId: SortOrder
}

input AttachFileUpdateInput {
  delYn: NullableStringFieldUpdateOperationsInput
  fileChgName: NullableStringFieldUpdateOperationsInput
  fileExt: NullableStringFieldUpdateOperationsInput
  fileName: StringFieldUpdateOperationsInput
  filePath: StringFieldUpdateOperationsInput
  fileSize: NullableIntFieldUpdateOperationsInput
  fileThumbUrl: NullableStringFieldUpdateOperationsInput
  fileUrl: NullableStringFieldUpdateOperationsInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
}

input AttachFileUpdateManyMutationInput {
  delYn: NullableStringFieldUpdateOperationsInput
  fileChgName: NullableStringFieldUpdateOperationsInput
  fileExt: NullableStringFieldUpdateOperationsInput
  fileName: StringFieldUpdateOperationsInput
  filePath: StringFieldUpdateOperationsInput
  fileSize: NullableIntFieldUpdateOperationsInput
  fileThumbUrl: NullableStringFieldUpdateOperationsInput
  fileUrl: NullableStringFieldUpdateOperationsInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
}

input AttachFileWhereInput {
  AND: [AttachFileWhereInput!]
  NOT: [AttachFileWhereInput!]
  OR: [AttachFileWhereInput!]
  delYn: StringNullableFilter
  fileChgName: StringNullableFilter
  fileExt: StringNullableFilter
  fileName: StringFilter
  filePath: StringFilter
  fileSize: IntNullableFilter
  fileThumbUrl: StringNullableFilter
  fileUrl: StringNullableFilter
  id: IntFilter
  modDt: DateTimeNullableFilter
  modId: IntNullableFilter
  regDt: DateTimeNullableFilter
  regId: IntNullableFilter
}

input AttachFileWhereUniqueInput {
  id: Int
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

input BigIntFieldUpdateOperationsInput {
  decrement: BigInt
  divide: BigInt
  increment: BigInt
  multiply: BigInt
  set: BigInt
}

input BigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input BigIntNullableFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableFilter
  notIn: [BigInt!]
}

input BigIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedBigIntNullableFilter
  _min: NestedBigIntNullableFilter
  _sum: NestedBigIntNullableFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableWithAggregatesFilter
  notIn: [BigInt!]
}

input BigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

type Board {
  content: String
  createdAt: DateTime
  id: BigInt!
  title: String
  updatedAt: DateTime
  writerId: BigInt!
}

type BoardAvgAggregate {
  id: Float
  writerId: Float
}

input BoardAvgOrderByAggregateInput {
  id: SortOrder
  writerId: SortOrder
}

type BoardCountAggregate {
  _all: Int!
  content: Int!
  createdAt: Int!
  id: Int!
  title: Int!
  updatedAt: Int!
  writerId: Int!
}

input BoardCountOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  writerId: SortOrder
}

input BoardCreateInput {
  content: String
  createdAt: DateTime
  id: BigInt
  title: String
  updatedAt: DateTime
  writerId: BigInt!
}

input BoardCreateManyInput {
  content: String
  createdAt: DateTime
  id: BigInt
  title: String
  updatedAt: DateTime
  writerId: BigInt!
}

type BoardGroupBy {
  _avg: BoardAvgAggregate
  _count: BoardCountAggregate
  _max: BoardMaxAggregate
  _min: BoardMinAggregate
  _sum: BoardSumAggregate
  content: String
  createdAt: DateTime
  id: BigInt!
  title: String
  updatedAt: DateTime
  writerId: BigInt!
}

type BoardMaxAggregate {
  content: String
  createdAt: DateTime
  id: BigInt
  title: String
  updatedAt: DateTime
  writerId: BigInt
}

input BoardMaxOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  writerId: SortOrder
}

type BoardMinAggregate {
  content: String
  createdAt: DateTime
  id: BigInt
  title: String
  updatedAt: DateTime
  writerId: BigInt
}

input BoardMinOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  writerId: SortOrder
}

input BoardOrderByWithAggregationInput {
  _avg: BoardAvgOrderByAggregateInput
  _count: BoardCountOrderByAggregateInput
  _max: BoardMaxOrderByAggregateInput
  _min: BoardMinOrderByAggregateInput
  _sum: BoardSumOrderByAggregateInput
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  writerId: SortOrder
}

input BoardOrderByWithRelationInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  writerId: SortOrder
}

enum BoardScalarFieldEnum {
  content
  createdAt
  id
  title
  updatedAt
  writerId
}

input BoardScalarWhereWithAggregatesInput {
  AND: [BoardScalarWhereWithAggregatesInput!]
  NOT: [BoardScalarWhereWithAggregatesInput!]
  OR: [BoardScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  createdAt: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  title: StringNullableWithAggregatesFilter
  updatedAt: DateTimeNullableWithAggregatesFilter
  writerId: BigIntWithAggregatesFilter
}

type BoardSumAggregate {
  id: BigInt
  writerId: BigInt
}

input BoardSumOrderByAggregateInput {
  id: SortOrder
  writerId: SortOrder
}

input BoardUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  writerId: BigIntFieldUpdateOperationsInput
}

input BoardUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: NullableDateTimeFieldUpdateOperationsInput
  writerId: BigIntFieldUpdateOperationsInput
}

input BoardWhereInput {
  AND: [BoardWhereInput!]
  NOT: [BoardWhereInput!]
  OR: [BoardWhereInput!]
  content: StringNullableFilter
  createdAt: DateTimeNullableFilter
  id: BigIntFilter
  title: StringNullableFilter
  updatedAt: DateTimeNullableFilter
  writerId: BigIntFilter
}

input BoardWhereUniqueInput {
  id: BigInt
}

type Code {
  codeGroupId: String!
  codeNm: String
  code_group: CodeGroup!
  delYn: String
  description: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
  sn: Int
}

type CodeAvgAggregate {
  modId: Float
  regId: Float
  sn: Float
}

input CodeAvgOrderByAggregateInput {
  modId: SortOrder
  regId: SortOrder
  sn: SortOrder
}

type CodeCountAggregate {
  _all: Int!
  codeGroupId: Int!
  codeNm: Int!
  delYn: Int!
  description: Int!
  id: Int!
  modDt: Int!
  modId: Int!
  regDt: Int!
  regId: Int!
  sn: Int!
}

input CodeCountOrderByAggregateInput {
  codeGroupId: SortOrder
  codeNm: SortOrder
  delYn: SortOrder
  description: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
  sn: SortOrder
}

input CodeCreateInput {
  codeNm: String
  code_group: CodeGroupCreateNestedOneWithoutCodeInput!
  delYn: String
  description: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
  sn: Int
}

input CodeCreateManyCode_groupInput {
  codeNm: String
  delYn: String
  description: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
  sn: Int
}

input CodeCreateManyCode_groupInputEnvelope {
  data: [CodeCreateManyCode_groupInput!]!
  skipDuplicates: Boolean
}

input CodeCreateManyInput {
  codeGroupId: String!
  codeNm: String
  delYn: String
  description: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
  sn: Int
}

input CodeCreateNestedManyWithoutCode_groupInput {
  connect: [CodeWhereUniqueInput!]
  connectOrCreate: [CodeCreateOrConnectWithoutCode_groupInput!]
  create: [CodeCreateWithoutCode_groupInput!]
  createMany: CodeCreateManyCode_groupInputEnvelope
}

input CodeCreateOrConnectWithoutCode_groupInput {
  create: CodeCreateWithoutCode_groupInput!
  where: CodeWhereUniqueInput!
}

input CodeCreateWithoutCode_groupInput {
  codeNm: String
  delYn: String
  description: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
  sn: Int
}

type CodeGroup {
  _count: CodeGroupCount
  code(cursor: CodeWhereUniqueInput, distinct: [CodeScalarFieldEnum!], orderBy: [CodeOrderByWithRelationInput!], skip: Int, take: Int, where: CodeWhereInput): [Code!]!
  delYn: String
  description: String
  groupNm: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

type CodeGroupAvgAggregate {
  modId: Float
  regId: Float
}

input CodeGroupAvgOrderByAggregateInput {
  modId: SortOrder
  regId: SortOrder
}

type CodeGroupBy {
  _avg: CodeAvgAggregate
  _count: CodeCountAggregate
  _max: CodeMaxAggregate
  _min: CodeMinAggregate
  _sum: CodeSumAggregate
  codeGroupId: String!
  codeNm: String
  delYn: String
  description: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
  sn: Int
}

type CodeGroupCount {
  code: Int!
}

type CodeGroupCountAggregate {
  _all: Int!
  delYn: Int!
  description: Int!
  groupNm: Int!
  id: Int!
  modDt: Int!
  modId: Int!
  regDt: Int!
  regId: Int!
}

input CodeGroupCountOrderByAggregateInput {
  delYn: SortOrder
  description: SortOrder
  groupNm: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

input CodeGroupCreateInput {
  code: CodeCreateNestedManyWithoutCode_groupInput
  delYn: String
  description: String
  groupNm: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

input CodeGroupCreateManyInput {
  delYn: String
  description: String
  groupNm: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

input CodeGroupCreateNestedOneWithoutCodeInput {
  connect: CodeGroupWhereUniqueInput
  connectOrCreate: CodeGroupCreateOrConnectWithoutCodeInput
  create: CodeGroupCreateWithoutCodeInput
}

input CodeGroupCreateOrConnectWithoutCodeInput {
  create: CodeGroupCreateWithoutCodeInput!
  where: CodeGroupWhereUniqueInput!
}

input CodeGroupCreateWithoutCodeInput {
  delYn: String
  description: String
  groupNm: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

type CodeGroupGroupBy {
  _avg: CodeGroupAvgAggregate
  _count: CodeGroupCountAggregate
  _max: CodeGroupMaxAggregate
  _min: CodeGroupMinAggregate
  _sum: CodeGroupSumAggregate
  delYn: String
  description: String
  groupNm: String
  id: String!
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

type CodeGroupMaxAggregate {
  delYn: String
  description: String
  groupNm: String
  id: String
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

input CodeGroupMaxOrderByAggregateInput {
  delYn: SortOrder
  description: SortOrder
  groupNm: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

type CodeGroupMinAggregate {
  delYn: String
  description: String
  groupNm: String
  id: String
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
}

input CodeGroupMinOrderByAggregateInput {
  delYn: SortOrder
  description: SortOrder
  groupNm: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

input CodeGroupOrderByWithAggregationInput {
  _avg: CodeGroupAvgOrderByAggregateInput
  _count: CodeGroupCountOrderByAggregateInput
  _max: CodeGroupMaxOrderByAggregateInput
  _min: CodeGroupMinOrderByAggregateInput
  _sum: CodeGroupSumOrderByAggregateInput
  delYn: SortOrder
  description: SortOrder
  groupNm: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

input CodeGroupOrderByWithRelationInput {
  code: CodeOrderByRelationAggregateInput
  delYn: SortOrder
  description: SortOrder
  groupNm: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
}

input CodeGroupRelationFilter {
  is: CodeGroupWhereInput
  isNot: CodeGroupWhereInput
}

enum CodeGroupScalarFieldEnum {
  delYn
  description
  groupNm
  id
  modDt
  modId
  regDt
  regId
}

input CodeGroupScalarWhereWithAggregatesInput {
  AND: [CodeGroupScalarWhereWithAggregatesInput!]
  NOT: [CodeGroupScalarWhereWithAggregatesInput!]
  OR: [CodeGroupScalarWhereWithAggregatesInput!]
  delYn: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  groupNm: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  modDt: DateTimeNullableWithAggregatesFilter
  modId: IntNullableWithAggregatesFilter
  regDt: DateTimeNullableWithAggregatesFilter
  regId: IntNullableWithAggregatesFilter
}

type CodeGroupSumAggregate {
  modId: Int
  regId: Int
}

input CodeGroupSumOrderByAggregateInput {
  modId: SortOrder
  regId: SortOrder
}

input CodeGroupUpdateInput {
  code: CodeUpdateManyWithoutCode_groupNestedInput
  delYn: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  groupNm: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
}

input CodeGroupUpdateManyMutationInput {
  delYn: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  groupNm: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
}

input CodeGroupUpdateOneRequiredWithoutCodeNestedInput {
  connect: CodeGroupWhereUniqueInput
  connectOrCreate: CodeGroupCreateOrConnectWithoutCodeInput
  create: CodeGroupCreateWithoutCodeInput
  update: CodeGroupUpdateWithoutCodeInput
  upsert: CodeGroupUpsertWithoutCodeInput
}

input CodeGroupUpdateWithoutCodeInput {
  delYn: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  groupNm: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
}

input CodeGroupUpsertWithoutCodeInput {
  create: CodeGroupCreateWithoutCodeInput!
  update: CodeGroupUpdateWithoutCodeInput!
}

input CodeGroupWhereInput {
  AND: [CodeGroupWhereInput!]
  NOT: [CodeGroupWhereInput!]
  OR: [CodeGroupWhereInput!]
  code: CodeListRelationFilter
  delYn: StringNullableFilter
  description: StringNullableFilter
  groupNm: StringNullableFilter
  id: StringFilter
  modDt: DateTimeNullableFilter
  modId: IntNullableFilter
  regDt: DateTimeNullableFilter
  regId: IntNullableFilter
}

input CodeGroupWhereUniqueInput {
  id: String
}

input CodeListRelationFilter {
  every: CodeWhereInput
  none: CodeWhereInput
  some: CodeWhereInput
}

type CodeMaxAggregate {
  codeGroupId: String
  codeNm: String
  delYn: String
  description: String
  id: String
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
  sn: Int
}

input CodeMaxOrderByAggregateInput {
  codeGroupId: SortOrder
  codeNm: SortOrder
  delYn: SortOrder
  description: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
  sn: SortOrder
}

type CodeMinAggregate {
  codeGroupId: String
  codeNm: String
  delYn: String
  description: String
  id: String
  modDt: DateTime
  modId: Int
  regDt: DateTime
  regId: Int
  sn: Int
}

input CodeMinOrderByAggregateInput {
  codeGroupId: SortOrder
  codeNm: SortOrder
  delYn: SortOrder
  description: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
  sn: SortOrder
}

input CodeOrderByRelationAggregateInput {
  _count: SortOrder
}

input CodeOrderByWithAggregationInput {
  _avg: CodeAvgOrderByAggregateInput
  _count: CodeCountOrderByAggregateInput
  _max: CodeMaxOrderByAggregateInput
  _min: CodeMinOrderByAggregateInput
  _sum: CodeSumOrderByAggregateInput
  codeGroupId: SortOrder
  codeNm: SortOrder
  delYn: SortOrder
  description: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
  sn: SortOrder
}

input CodeOrderByWithRelationInput {
  codeGroupId: SortOrder
  codeNm: SortOrder
  code_group: CodeGroupOrderByWithRelationInput
  delYn: SortOrder
  description: SortOrder
  id: SortOrder
  modDt: SortOrder
  modId: SortOrder
  regDt: SortOrder
  regId: SortOrder
  sn: SortOrder
}

enum CodeScalarFieldEnum {
  codeGroupId
  codeNm
  delYn
  description
  id
  modDt
  modId
  regDt
  regId
  sn
}

input CodeScalarWhereInput {
  AND: [CodeScalarWhereInput!]
  NOT: [CodeScalarWhereInput!]
  OR: [CodeScalarWhereInput!]
  codeGroupId: StringFilter
  codeNm: StringNullableFilter
  delYn: StringNullableFilter
  description: StringNullableFilter
  id: StringFilter
  modDt: DateTimeNullableFilter
  modId: IntNullableFilter
  regDt: DateTimeNullableFilter
  regId: IntNullableFilter
  sn: IntNullableFilter
}

input CodeScalarWhereWithAggregatesInput {
  AND: [CodeScalarWhereWithAggregatesInput!]
  NOT: [CodeScalarWhereWithAggregatesInput!]
  OR: [CodeScalarWhereWithAggregatesInput!]
  codeGroupId: StringWithAggregatesFilter
  codeNm: StringNullableWithAggregatesFilter
  delYn: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  modDt: DateTimeNullableWithAggregatesFilter
  modId: IntNullableWithAggregatesFilter
  regDt: DateTimeNullableWithAggregatesFilter
  regId: IntNullableWithAggregatesFilter
  sn: IntNullableWithAggregatesFilter
}

type CodeSumAggregate {
  modId: Int
  regId: Int
  sn: Int
}

input CodeSumOrderByAggregateInput {
  modId: SortOrder
  regId: SortOrder
  sn: SortOrder
}

input CodeUpdateInput {
  codeNm: NullableStringFieldUpdateOperationsInput
  code_group: CodeGroupUpdateOneRequiredWithoutCodeNestedInput
  delYn: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
  sn: NullableIntFieldUpdateOperationsInput
}

input CodeUpdateManyMutationInput {
  codeNm: NullableStringFieldUpdateOperationsInput
  delYn: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
  sn: NullableIntFieldUpdateOperationsInput
}

input CodeUpdateManyWithWhereWithoutCode_groupInput {
  data: CodeUpdateManyMutationInput!
  where: CodeScalarWhereInput!
}

input CodeUpdateManyWithoutCode_groupNestedInput {
  connect: [CodeWhereUniqueInput!]
  connectOrCreate: [CodeCreateOrConnectWithoutCode_groupInput!]
  create: [CodeCreateWithoutCode_groupInput!]
  createMany: CodeCreateManyCode_groupInputEnvelope
  delete: [CodeWhereUniqueInput!]
  deleteMany: [CodeScalarWhereInput!]
  disconnect: [CodeWhereUniqueInput!]
  set: [CodeWhereUniqueInput!]
  update: [CodeUpdateWithWhereUniqueWithoutCode_groupInput!]
  updateMany: [CodeUpdateManyWithWhereWithoutCode_groupInput!]
  upsert: [CodeUpsertWithWhereUniqueWithoutCode_groupInput!]
}

input CodeUpdateWithWhereUniqueWithoutCode_groupInput {
  data: CodeUpdateWithoutCode_groupInput!
  where: CodeWhereUniqueInput!
}

input CodeUpdateWithoutCode_groupInput {
  codeNm: NullableStringFieldUpdateOperationsInput
  delYn: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
  sn: NullableIntFieldUpdateOperationsInput
}

input CodeUpsertWithWhereUniqueWithoutCode_groupInput {
  create: CodeCreateWithoutCode_groupInput!
  update: CodeUpdateWithoutCode_groupInput!
  where: CodeWhereUniqueInput!
}

input CodeWhereInput {
  AND: [CodeWhereInput!]
  NOT: [CodeWhereInput!]
  OR: [CodeWhereInput!]
  codeGroupId: StringFilter
  codeNm: StringNullableFilter
  code_group: CodeGroupRelationFilter
  delYn: StringNullableFilter
  description: StringNullableFilter
  id: StringFilter
  modDt: DateTimeNullableFilter
  modId: IntNullableFilter
  regDt: DateTimeNullableFilter
  regId: IntNullableFilter
  sn: IntNullableFilter
}

input CodeWhereUniqueInput {
  codeGroupId_id: codeCodeGroupIdIdCompoundUniqueInput
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Member {
  _count: MemberCount
  accountId: BigInt!
  attachFileId: Int
  delYn: String
  emailRecptnYn: String
  mbtlnum: String
  member_device(cursor: MemberDeviceWhereUniqueInput, distinct: [MemberDeviceScalarFieldEnum!], orderBy: [MemberDeviceOrderByWithRelationInput!], skip: Int, take: Int, where: MemberDeviceWhereInput): [MemberDevice!]!
  member_notification(cursor: MemberNotificationWhereUniqueInput, distinct: [MemberNotificationScalarFieldEnum!], orderBy: [MemberNotificationOrderByWithRelationInput!], skip: Int, take: Int, where: MemberNotificationWhereInput): [MemberNotification!]!
  modDt: DateTime
  modId: Int
  name: String
  ntvFrnrCd: String
  pushAlarmYn: String
  pushRecptnEstbsDt: DateTime
  regDt: DateTime
  regId: Int
  secessionDt: DateTime
  sexdstn: String
  signupToken: String
  smsRecptnEstbsDt: DateTime
  smsRecptnYn: String
  subscribeDt: DateTime
  telComCd: String
}

type MemberAvgAggregate {
  accountId: Float
  attachFileId: Float
  modId: Float
  regId: Float
}

input MemberAvgOrderByAggregateInput {
  accountId: SortOrder
  attachFileId: SortOrder
  modId: SortOrder
  regId: SortOrder
}

type MemberCount {
  member_device: Int!
  member_notification: Int!
}

type MemberCountAggregate {
  _all: Int!
  accountId: Int!
  attachFileId: Int!
  delYn: Int!
  emailRecptnYn: Int!
  mbtlnum: Int!
  modDt: Int!
  modId: Int!
  name: Int!
  ntvFrnrCd: Int!
  pushAlarmYn: Int!
  pushRecptnEstbsDt: Int!
  regDt: Int!
  regId: Int!
  secessionDt: Int!
  sexdstn: Int!
  signupToken: Int!
  smsRecptnEstbsDt: Int!
  smsRecptnYn: Int!
  subscribeDt: Int!
  telComCd: Int!
}

input MemberCountOrderByAggregateInput {
  accountId: SortOrder
  attachFileId: SortOrder
  delYn: SortOrder
  emailRecptnYn: SortOrder
  mbtlnum: SortOrder
  modDt: SortOrder
  modId: SortOrder
  name: SortOrder
  ntvFrnrCd: SortOrder
  pushAlarmYn: SortOrder
  pushRecptnEstbsDt: SortOrder
  regDt: SortOrder
  regId: SortOrder
  secessionDt: SortOrder
  sexdstn: SortOrder
  signupToken: SortOrder
  smsRecptnEstbsDt: SortOrder
  smsRecptnYn: SortOrder
  subscribeDt: SortOrder
  telComCd: SortOrder
}

input MemberCreateInput {
  accountId: BigInt!
  attachFileId: Int
  delYn: String
  emailRecptnYn: String
  mbtlnum: String
  member_device: MemberDeviceCreateNestedManyWithoutMemberInput
  member_notification: MemberNotificationCreateNestedManyWithoutMemberInput
  modDt: DateTime
  modId: Int
  name: String
  ntvFrnrCd: String
  pushAlarmYn: String
  pushRecptnEstbsDt: DateTime
  regDt: DateTime
  regId: Int
  secessionDt: DateTime
  sexdstn: String
  signupToken: String
  smsRecptnEstbsDt: DateTime
  smsRecptnYn: String
  subscribeDt: DateTime
  telComCd: String
}

input MemberCreateManyInput {
  accountId: BigInt!
  attachFileId: Int
  delYn: String
  emailRecptnYn: String
  mbtlnum: String
  modDt: DateTime
  modId: Int
  name: String
  ntvFrnrCd: String
  pushAlarmYn: String
  pushRecptnEstbsDt: DateTime
  regDt: DateTime
  regId: Int
  secessionDt: DateTime
  sexdstn: String
  signupToken: String
  smsRecptnEstbsDt: DateTime
  smsRecptnYn: String
  subscribeDt: DateTime
  telComCd: String
}

input MemberCreateNestedOneWithoutMember_deviceInput {
  connect: MemberWhereUniqueInput
  connectOrCreate: MemberCreateOrConnectWithoutMember_deviceInput
  create: MemberCreateWithoutMember_deviceInput
}

input MemberCreateNestedOneWithoutMember_notificationInput {
  connect: MemberWhereUniqueInput
  connectOrCreate: MemberCreateOrConnectWithoutMember_notificationInput
  create: MemberCreateWithoutMember_notificationInput
}

input MemberCreateOrConnectWithoutMember_deviceInput {
  create: MemberCreateWithoutMember_deviceInput!
  where: MemberWhereUniqueInput!
}

input MemberCreateOrConnectWithoutMember_notificationInput {
  create: MemberCreateWithoutMember_notificationInput!
  where: MemberWhereUniqueInput!
}

input MemberCreateWithoutMember_deviceInput {
  accountId: BigInt!
  attachFileId: Int
  delYn: String
  emailRecptnYn: String
  mbtlnum: String
  member_notification: MemberNotificationCreateNestedManyWithoutMemberInput
  modDt: DateTime
  modId: Int
  name: String
  ntvFrnrCd: String
  pushAlarmYn: String
  pushRecptnEstbsDt: DateTime
  regDt: DateTime
  regId: Int
  secessionDt: DateTime
  sexdstn: String
  signupToken: String
  smsRecptnEstbsDt: DateTime
  smsRecptnYn: String
  subscribeDt: DateTime
  telComCd: String
}

input MemberCreateWithoutMember_notificationInput {
  accountId: BigInt!
  attachFileId: Int
  delYn: String
  emailRecptnYn: String
  mbtlnum: String
  member_device: MemberDeviceCreateNestedManyWithoutMemberInput
  modDt: DateTime
  modId: Int
  name: String
  ntvFrnrCd: String
  pushAlarmYn: String
  pushRecptnEstbsDt: DateTime
  regDt: DateTime
  regId: Int
  secessionDt: DateTime
  sexdstn: String
  signupToken: String
  smsRecptnEstbsDt: DateTime
  smsRecptnYn: String
  subscribeDt: DateTime
  telComCd: String
}

type MemberDevice {
  accountId: BigInt
  appCd: String
  appOs: String
  createdAt: DateTime
  deviceId: String
  deviceName: String
  deviceType: String
  emulatorYn: String
  fcmToken: String
  host: String
  id: Int!
  member: Member
  osVersion: String
  tabletYn: String
  uniqueId: String
  userAgent: String
}

type MemberDeviceAvgAggregate {
  accountId: Float
  id: Float
}

input MemberDeviceAvgOrderByAggregateInput {
  accountId: SortOrder
  id: SortOrder
}

type MemberDeviceCountAggregate {
  _all: Int!
  accountId: Int!
  appCd: Int!
  appOs: Int!
  createdAt: Int!
  deviceId: Int!
  deviceName: Int!
  deviceType: Int!
  emulatorYn: Int!
  fcmToken: Int!
  host: Int!
  id: Int!
  osVersion: Int!
  tabletYn: Int!
  uniqueId: Int!
  userAgent: Int!
}

input MemberDeviceCountOrderByAggregateInput {
  accountId: SortOrder
  appCd: SortOrder
  appOs: SortOrder
  createdAt: SortOrder
  deviceId: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  emulatorYn: SortOrder
  fcmToken: SortOrder
  host: SortOrder
  id: SortOrder
  osVersion: SortOrder
  tabletYn: SortOrder
  uniqueId: SortOrder
  userAgent: SortOrder
}

input MemberDeviceCreateInput {
  appCd: String
  appOs: String
  createdAt: DateTime
  deviceId: String
  deviceName: String
  deviceType: String
  emulatorYn: String
  fcmToken: String
  host: String
  member: MemberCreateNestedOneWithoutMember_deviceInput
  osVersion: String
  tabletYn: String
  uniqueId: String
  userAgent: String
}

input MemberDeviceCreateManyInput {
  accountId: BigInt
  appCd: String
  appOs: String
  createdAt: DateTime
  deviceId: String
  deviceName: String
  deviceType: String
  emulatorYn: String
  fcmToken: String
  host: String
  id: Int
  osVersion: String
  tabletYn: String
  uniqueId: String
  userAgent: String
}

input MemberDeviceCreateManyMemberInput {
  appCd: String
  appOs: String
  createdAt: DateTime
  deviceId: String
  deviceName: String
  deviceType: String
  emulatorYn: String
  fcmToken: String
  host: String
  id: Int
  osVersion: String
  tabletYn: String
  uniqueId: String
  userAgent: String
}

input MemberDeviceCreateManyMemberInputEnvelope {
  data: [MemberDeviceCreateManyMemberInput!]!
  skipDuplicates: Boolean
}

input MemberDeviceCreateNestedManyWithoutMemberInput {
  connect: [MemberDeviceWhereUniqueInput!]
  connectOrCreate: [MemberDeviceCreateOrConnectWithoutMemberInput!]
  create: [MemberDeviceCreateWithoutMemberInput!]
  createMany: MemberDeviceCreateManyMemberInputEnvelope
}

input MemberDeviceCreateOrConnectWithoutMemberInput {
  create: MemberDeviceCreateWithoutMemberInput!
  where: MemberDeviceWhereUniqueInput!
}

input MemberDeviceCreateWithoutMemberInput {
  appCd: String
  appOs: String
  createdAt: DateTime
  deviceId: String
  deviceName: String
  deviceType: String
  emulatorYn: String
  fcmToken: String
  host: String
  osVersion: String
  tabletYn: String
  uniqueId: String
  userAgent: String
}

type MemberDeviceGroupBy {
  _avg: MemberDeviceAvgAggregate
  _count: MemberDeviceCountAggregate
  _max: MemberDeviceMaxAggregate
  _min: MemberDeviceMinAggregate
  _sum: MemberDeviceSumAggregate
  accountId: BigInt
  appCd: String
  appOs: String
  createdAt: DateTime
  deviceId: String
  deviceName: String
  deviceType: String
  emulatorYn: String
  fcmToken: String
  host: String
  id: Int!
  osVersion: String
  tabletYn: String
  uniqueId: String
  userAgent: String
}

input MemberDeviceListRelationFilter {
  every: MemberDeviceWhereInput
  none: MemberDeviceWhereInput
  some: MemberDeviceWhereInput
}

type MemberDeviceMaxAggregate {
  accountId: BigInt
  appCd: String
  appOs: String
  createdAt: DateTime
  deviceId: String
  deviceName: String
  deviceType: String
  emulatorYn: String
  fcmToken: String
  host: String
  id: Int
  osVersion: String
  tabletYn: String
  uniqueId: String
  userAgent: String
}

input MemberDeviceMaxOrderByAggregateInput {
  accountId: SortOrder
  appCd: SortOrder
  appOs: SortOrder
  createdAt: SortOrder
  deviceId: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  emulatorYn: SortOrder
  fcmToken: SortOrder
  host: SortOrder
  id: SortOrder
  osVersion: SortOrder
  tabletYn: SortOrder
  uniqueId: SortOrder
  userAgent: SortOrder
}

type MemberDeviceMinAggregate {
  accountId: BigInt
  appCd: String
  appOs: String
  createdAt: DateTime
  deviceId: String
  deviceName: String
  deviceType: String
  emulatorYn: String
  fcmToken: String
  host: String
  id: Int
  osVersion: String
  tabletYn: String
  uniqueId: String
  userAgent: String
}

input MemberDeviceMinOrderByAggregateInput {
  accountId: SortOrder
  appCd: SortOrder
  appOs: SortOrder
  createdAt: SortOrder
  deviceId: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  emulatorYn: SortOrder
  fcmToken: SortOrder
  host: SortOrder
  id: SortOrder
  osVersion: SortOrder
  tabletYn: SortOrder
  uniqueId: SortOrder
  userAgent: SortOrder
}

input MemberDeviceOrderByRelationAggregateInput {
  _count: SortOrder
}

input MemberDeviceOrderByWithAggregationInput {
  _avg: MemberDeviceAvgOrderByAggregateInput
  _count: MemberDeviceCountOrderByAggregateInput
  _max: MemberDeviceMaxOrderByAggregateInput
  _min: MemberDeviceMinOrderByAggregateInput
  _sum: MemberDeviceSumOrderByAggregateInput
  accountId: SortOrder
  appCd: SortOrder
  appOs: SortOrder
  createdAt: SortOrder
  deviceId: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  emulatorYn: SortOrder
  fcmToken: SortOrder
  host: SortOrder
  id: SortOrder
  osVersion: SortOrder
  tabletYn: SortOrder
  uniqueId: SortOrder
  userAgent: SortOrder
}

input MemberDeviceOrderByWithRelationInput {
  accountId: SortOrder
  appCd: SortOrder
  appOs: SortOrder
  createdAt: SortOrder
  deviceId: SortOrder
  deviceName: SortOrder
  deviceType: SortOrder
  emulatorYn: SortOrder
  fcmToken: SortOrder
  host: SortOrder
  id: SortOrder
  member: MemberOrderByWithRelationInput
  osVersion: SortOrder
  tabletYn: SortOrder
  uniqueId: SortOrder
  userAgent: SortOrder
}

enum MemberDeviceScalarFieldEnum {
  accountId
  appCd
  appOs
  createdAt
  deviceId
  deviceName
  deviceType
  emulatorYn
  fcmToken
  host
  id
  osVersion
  tabletYn
  uniqueId
  userAgent
}

input MemberDeviceScalarWhereInput {
  AND: [MemberDeviceScalarWhereInput!]
  NOT: [MemberDeviceScalarWhereInput!]
  OR: [MemberDeviceScalarWhereInput!]
  accountId: BigIntNullableFilter
  appCd: StringNullableFilter
  appOs: StringNullableFilter
  createdAt: DateTimeNullableFilter
  deviceId: StringNullableFilter
  deviceName: StringNullableFilter
  deviceType: StringNullableFilter
  emulatorYn: StringNullableFilter
  fcmToken: StringNullableFilter
  host: StringNullableFilter
  id: IntFilter
  osVersion: StringNullableFilter
  tabletYn: StringNullableFilter
  uniqueId: StringNullableFilter
  userAgent: StringNullableFilter
}

input MemberDeviceScalarWhereWithAggregatesInput {
  AND: [MemberDeviceScalarWhereWithAggregatesInput!]
  NOT: [MemberDeviceScalarWhereWithAggregatesInput!]
  OR: [MemberDeviceScalarWhereWithAggregatesInput!]
  accountId: BigIntNullableWithAggregatesFilter
  appCd: StringNullableWithAggregatesFilter
  appOs: StringNullableWithAggregatesFilter
  createdAt: DateTimeNullableWithAggregatesFilter
  deviceId: StringNullableWithAggregatesFilter
  deviceName: StringNullableWithAggregatesFilter
  deviceType: StringNullableWithAggregatesFilter
  emulatorYn: StringNullableWithAggregatesFilter
  fcmToken: StringNullableWithAggregatesFilter
  host: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  osVersion: StringNullableWithAggregatesFilter
  tabletYn: StringNullableWithAggregatesFilter
  uniqueId: StringNullableWithAggregatesFilter
  userAgent: StringNullableWithAggregatesFilter
}

type MemberDeviceSumAggregate {
  accountId: BigInt
  id: Int
}

input MemberDeviceSumOrderByAggregateInput {
  accountId: SortOrder
  id: SortOrder
}

input MemberDeviceUpdateInput {
  appCd: NullableStringFieldUpdateOperationsInput
  appOs: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  deviceId: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  emulatorYn: NullableStringFieldUpdateOperationsInput
  fcmToken: NullableStringFieldUpdateOperationsInput
  host: NullableStringFieldUpdateOperationsInput
  member: MemberUpdateOneWithoutMember_deviceNestedInput
  osVersion: NullableStringFieldUpdateOperationsInput
  tabletYn: NullableStringFieldUpdateOperationsInput
  uniqueId: NullableStringFieldUpdateOperationsInput
  userAgent: NullableStringFieldUpdateOperationsInput
}

input MemberDeviceUpdateManyMutationInput {
  appCd: NullableStringFieldUpdateOperationsInput
  appOs: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  deviceId: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  emulatorYn: NullableStringFieldUpdateOperationsInput
  fcmToken: NullableStringFieldUpdateOperationsInput
  host: NullableStringFieldUpdateOperationsInput
  osVersion: NullableStringFieldUpdateOperationsInput
  tabletYn: NullableStringFieldUpdateOperationsInput
  uniqueId: NullableStringFieldUpdateOperationsInput
  userAgent: NullableStringFieldUpdateOperationsInput
}

input MemberDeviceUpdateManyWithWhereWithoutMemberInput {
  data: MemberDeviceUpdateManyMutationInput!
  where: MemberDeviceScalarWhereInput!
}

input MemberDeviceUpdateManyWithoutMemberNestedInput {
  connect: [MemberDeviceWhereUniqueInput!]
  connectOrCreate: [MemberDeviceCreateOrConnectWithoutMemberInput!]
  create: [MemberDeviceCreateWithoutMemberInput!]
  createMany: MemberDeviceCreateManyMemberInputEnvelope
  delete: [MemberDeviceWhereUniqueInput!]
  deleteMany: [MemberDeviceScalarWhereInput!]
  disconnect: [MemberDeviceWhereUniqueInput!]
  set: [MemberDeviceWhereUniqueInput!]
  update: [MemberDeviceUpdateWithWhereUniqueWithoutMemberInput!]
  updateMany: [MemberDeviceUpdateManyWithWhereWithoutMemberInput!]
  upsert: [MemberDeviceUpsertWithWhereUniqueWithoutMemberInput!]
}

input MemberDeviceUpdateWithWhereUniqueWithoutMemberInput {
  data: MemberDeviceUpdateWithoutMemberInput!
  where: MemberDeviceWhereUniqueInput!
}

input MemberDeviceUpdateWithoutMemberInput {
  appCd: NullableStringFieldUpdateOperationsInput
  appOs: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  deviceId: NullableStringFieldUpdateOperationsInput
  deviceName: NullableStringFieldUpdateOperationsInput
  deviceType: NullableStringFieldUpdateOperationsInput
  emulatorYn: NullableStringFieldUpdateOperationsInput
  fcmToken: NullableStringFieldUpdateOperationsInput
  host: NullableStringFieldUpdateOperationsInput
  osVersion: NullableStringFieldUpdateOperationsInput
  tabletYn: NullableStringFieldUpdateOperationsInput
  uniqueId: NullableStringFieldUpdateOperationsInput
  userAgent: NullableStringFieldUpdateOperationsInput
}

input MemberDeviceUpsertWithWhereUniqueWithoutMemberInput {
  create: MemberDeviceCreateWithoutMemberInput!
  update: MemberDeviceUpdateWithoutMemberInput!
  where: MemberDeviceWhereUniqueInput!
}

input MemberDeviceWhereInput {
  AND: [MemberDeviceWhereInput!]
  NOT: [MemberDeviceWhereInput!]
  OR: [MemberDeviceWhereInput!]
  accountId: BigIntNullableFilter
  appCd: StringNullableFilter
  appOs: StringNullableFilter
  createdAt: DateTimeNullableFilter
  deviceId: StringNullableFilter
  deviceName: StringNullableFilter
  deviceType: StringNullableFilter
  emulatorYn: StringNullableFilter
  fcmToken: StringNullableFilter
  host: StringNullableFilter
  id: IntFilter
  member: MemberRelationFilter
  osVersion: StringNullableFilter
  tabletYn: StringNullableFilter
  uniqueId: StringNullableFilter
  userAgent: StringNullableFilter
}

input MemberDeviceWhereUniqueInput {
  id: Int
}

type MemberGroupBy {
  _avg: MemberAvgAggregate
  _count: MemberCountAggregate
  _max: MemberMaxAggregate
  _min: MemberMinAggregate
  _sum: MemberSumAggregate
  accountId: BigInt!
  attachFileId: Int
  delYn: String
  emailRecptnYn: String
  mbtlnum: String
  modDt: DateTime
  modId: Int
  name: String
  ntvFrnrCd: String
  pushAlarmYn: String
  pushRecptnEstbsDt: DateTime
  regDt: DateTime
  regId: Int
  secessionDt: DateTime
  sexdstn: String
  signupToken: String
  smsRecptnEstbsDt: DateTime
  smsRecptnYn: String
  subscribeDt: DateTime
  telComCd: String
}

type MemberMaxAggregate {
  accountId: BigInt
  attachFileId: Int
  delYn: String
  emailRecptnYn: String
  mbtlnum: String
  modDt: DateTime
  modId: Int
  name: String
  ntvFrnrCd: String
  pushAlarmYn: String
  pushRecptnEstbsDt: DateTime
  regDt: DateTime
  regId: Int
  secessionDt: DateTime
  sexdstn: String
  signupToken: String
  smsRecptnEstbsDt: DateTime
  smsRecptnYn: String
  subscribeDt: DateTime
  telComCd: String
}

input MemberMaxOrderByAggregateInput {
  accountId: SortOrder
  attachFileId: SortOrder
  delYn: SortOrder
  emailRecptnYn: SortOrder
  mbtlnum: SortOrder
  modDt: SortOrder
  modId: SortOrder
  name: SortOrder
  ntvFrnrCd: SortOrder
  pushAlarmYn: SortOrder
  pushRecptnEstbsDt: SortOrder
  regDt: SortOrder
  regId: SortOrder
  secessionDt: SortOrder
  sexdstn: SortOrder
  signupToken: SortOrder
  smsRecptnEstbsDt: SortOrder
  smsRecptnYn: SortOrder
  subscribeDt: SortOrder
  telComCd: SortOrder
}

type MemberMinAggregate {
  accountId: BigInt
  attachFileId: Int
  delYn: String
  emailRecptnYn: String
  mbtlnum: String
  modDt: DateTime
  modId: Int
  name: String
  ntvFrnrCd: String
  pushAlarmYn: String
  pushRecptnEstbsDt: DateTime
  regDt: DateTime
  regId: Int
  secessionDt: DateTime
  sexdstn: String
  signupToken: String
  smsRecptnEstbsDt: DateTime
  smsRecptnYn: String
  subscribeDt: DateTime
  telComCd: String
}

input MemberMinOrderByAggregateInput {
  accountId: SortOrder
  attachFileId: SortOrder
  delYn: SortOrder
  emailRecptnYn: SortOrder
  mbtlnum: SortOrder
  modDt: SortOrder
  modId: SortOrder
  name: SortOrder
  ntvFrnrCd: SortOrder
  pushAlarmYn: SortOrder
  pushRecptnEstbsDt: SortOrder
  regDt: SortOrder
  regId: SortOrder
  secessionDt: SortOrder
  sexdstn: SortOrder
  signupToken: SortOrder
  smsRecptnEstbsDt: SortOrder
  smsRecptnYn: SortOrder
  subscribeDt: SortOrder
  telComCd: SortOrder
}

type MemberNotification {
  accountId: BigInt
  createdAt: DateTime
  id: BigInt!
  member: Member
  notification: Notification
  notificationId: BigInt
  readAt: DateTime
  readYn: String
}

type MemberNotificationAvgAggregate {
  accountId: Float
  id: Float
  notificationId: Float
}

input MemberNotificationAvgOrderByAggregateInput {
  accountId: SortOrder
  id: SortOrder
  notificationId: SortOrder
}

type MemberNotificationCountAggregate {
  _all: Int!
  accountId: Int!
  createdAt: Int!
  id: Int!
  notificationId: Int!
  readAt: Int!
  readYn: Int!
}

input MemberNotificationCountOrderByAggregateInput {
  accountId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  notificationId: SortOrder
  readAt: SortOrder
  readYn: SortOrder
}

input MemberNotificationCreateInput {
  createdAt: DateTime
  id: BigInt
  member: MemberCreateNestedOneWithoutMember_notificationInput
  notification: NotificationCreateNestedOneWithoutMember_notificationInput
  readAt: DateTime
  readYn: String
}

input MemberNotificationCreateManyInput {
  accountId: BigInt
  createdAt: DateTime
  id: BigInt
  notificationId: BigInt
  readAt: DateTime
  readYn: String
}

input MemberNotificationCreateManyMemberInput {
  createdAt: DateTime
  id: BigInt
  notificationId: BigInt
  readAt: DateTime
  readYn: String
}

input MemberNotificationCreateManyMemberInputEnvelope {
  data: [MemberNotificationCreateManyMemberInput!]!
  skipDuplicates: Boolean
}

input MemberNotificationCreateManyNotificationInput {
  accountId: BigInt
  createdAt: DateTime
  id: BigInt
  readAt: DateTime
  readYn: String
}

input MemberNotificationCreateManyNotificationInputEnvelope {
  data: [MemberNotificationCreateManyNotificationInput!]!
  skipDuplicates: Boolean
}

input MemberNotificationCreateNestedManyWithoutMemberInput {
  connect: [MemberNotificationWhereUniqueInput!]
  connectOrCreate: [MemberNotificationCreateOrConnectWithoutMemberInput!]
  create: [MemberNotificationCreateWithoutMemberInput!]
  createMany: MemberNotificationCreateManyMemberInputEnvelope
}

input MemberNotificationCreateNestedManyWithoutNotificationInput {
  connect: [MemberNotificationWhereUniqueInput!]
  connectOrCreate: [MemberNotificationCreateOrConnectWithoutNotificationInput!]
  create: [MemberNotificationCreateWithoutNotificationInput!]
  createMany: MemberNotificationCreateManyNotificationInputEnvelope
}

input MemberNotificationCreateOrConnectWithoutMemberInput {
  create: MemberNotificationCreateWithoutMemberInput!
  where: MemberNotificationWhereUniqueInput!
}

input MemberNotificationCreateOrConnectWithoutNotificationInput {
  create: MemberNotificationCreateWithoutNotificationInput!
  where: MemberNotificationWhereUniqueInput!
}

input MemberNotificationCreateWithoutMemberInput {
  createdAt: DateTime
  id: BigInt
  notification: NotificationCreateNestedOneWithoutMember_notificationInput
  readAt: DateTime
  readYn: String
}

input MemberNotificationCreateWithoutNotificationInput {
  createdAt: DateTime
  id: BigInt
  member: MemberCreateNestedOneWithoutMember_notificationInput
  readAt: DateTime
  readYn: String
}

type MemberNotificationGroupBy {
  _avg: MemberNotificationAvgAggregate
  _count: MemberNotificationCountAggregate
  _max: MemberNotificationMaxAggregate
  _min: MemberNotificationMinAggregate
  _sum: MemberNotificationSumAggregate
  accountId: BigInt
  createdAt: DateTime
  id: BigInt!
  notificationId: BigInt
  readAt: DateTime
  readYn: String
}

input MemberNotificationListRelationFilter {
  every: MemberNotificationWhereInput
  none: MemberNotificationWhereInput
  some: MemberNotificationWhereInput
}

type MemberNotificationMaxAggregate {
  accountId: BigInt
  createdAt: DateTime
  id: BigInt
  notificationId: BigInt
  readAt: DateTime
  readYn: String
}

input MemberNotificationMaxOrderByAggregateInput {
  accountId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  notificationId: SortOrder
  readAt: SortOrder
  readYn: SortOrder
}

type MemberNotificationMinAggregate {
  accountId: BigInt
  createdAt: DateTime
  id: BigInt
  notificationId: BigInt
  readAt: DateTime
  readYn: String
}

input MemberNotificationMinOrderByAggregateInput {
  accountId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  notificationId: SortOrder
  readAt: SortOrder
  readYn: SortOrder
}

input MemberNotificationOrderByRelationAggregateInput {
  _count: SortOrder
}

input MemberNotificationOrderByWithAggregationInput {
  _avg: MemberNotificationAvgOrderByAggregateInput
  _count: MemberNotificationCountOrderByAggregateInput
  _max: MemberNotificationMaxOrderByAggregateInput
  _min: MemberNotificationMinOrderByAggregateInput
  _sum: MemberNotificationSumOrderByAggregateInput
  accountId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  notificationId: SortOrder
  readAt: SortOrder
  readYn: SortOrder
}

input MemberNotificationOrderByWithRelationInput {
  accountId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  member: MemberOrderByWithRelationInput
  notification: NotificationOrderByWithRelationInput
  notificationId: SortOrder
  readAt: SortOrder
  readYn: SortOrder
}

enum MemberNotificationScalarFieldEnum {
  accountId
  createdAt
  id
  notificationId
  readAt
  readYn
}

input MemberNotificationScalarWhereInput {
  AND: [MemberNotificationScalarWhereInput!]
  NOT: [MemberNotificationScalarWhereInput!]
  OR: [MemberNotificationScalarWhereInput!]
  accountId: BigIntNullableFilter
  createdAt: DateTimeNullableFilter
  id: BigIntFilter
  notificationId: BigIntNullableFilter
  readAt: DateTimeNullableFilter
  readYn: StringNullableFilter
}

input MemberNotificationScalarWhereWithAggregatesInput {
  AND: [MemberNotificationScalarWhereWithAggregatesInput!]
  NOT: [MemberNotificationScalarWhereWithAggregatesInput!]
  OR: [MemberNotificationScalarWhereWithAggregatesInput!]
  accountId: BigIntNullableWithAggregatesFilter
  createdAt: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  notificationId: BigIntNullableWithAggregatesFilter
  readAt: DateTimeNullableWithAggregatesFilter
  readYn: StringNullableWithAggregatesFilter
}

type MemberNotificationSumAggregate {
  accountId: BigInt
  id: BigInt
  notificationId: BigInt
}

input MemberNotificationSumOrderByAggregateInput {
  accountId: SortOrder
  id: SortOrder
  notificationId: SortOrder
}

input MemberNotificationUpdateInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  member: MemberUpdateOneWithoutMember_notificationNestedInput
  notification: NotificationUpdateOneWithoutMember_notificationNestedInput
  readAt: NullableDateTimeFieldUpdateOperationsInput
  readYn: NullableStringFieldUpdateOperationsInput
}

input MemberNotificationUpdateManyMutationInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  readAt: NullableDateTimeFieldUpdateOperationsInput
  readYn: NullableStringFieldUpdateOperationsInput
}

input MemberNotificationUpdateManyWithWhereWithoutMemberInput {
  data: MemberNotificationUpdateManyMutationInput!
  where: MemberNotificationScalarWhereInput!
}

input MemberNotificationUpdateManyWithWhereWithoutNotificationInput {
  data: MemberNotificationUpdateManyMutationInput!
  where: MemberNotificationScalarWhereInput!
}

input MemberNotificationUpdateManyWithoutMemberNestedInput {
  connect: [MemberNotificationWhereUniqueInput!]
  connectOrCreate: [MemberNotificationCreateOrConnectWithoutMemberInput!]
  create: [MemberNotificationCreateWithoutMemberInput!]
  createMany: MemberNotificationCreateManyMemberInputEnvelope
  delete: [MemberNotificationWhereUniqueInput!]
  deleteMany: [MemberNotificationScalarWhereInput!]
  disconnect: [MemberNotificationWhereUniqueInput!]
  set: [MemberNotificationWhereUniqueInput!]
  update: [MemberNotificationUpdateWithWhereUniqueWithoutMemberInput!]
  updateMany: [MemberNotificationUpdateManyWithWhereWithoutMemberInput!]
  upsert: [MemberNotificationUpsertWithWhereUniqueWithoutMemberInput!]
}

input MemberNotificationUpdateManyWithoutNotificationNestedInput {
  connect: [MemberNotificationWhereUniqueInput!]
  connectOrCreate: [MemberNotificationCreateOrConnectWithoutNotificationInput!]
  create: [MemberNotificationCreateWithoutNotificationInput!]
  createMany: MemberNotificationCreateManyNotificationInputEnvelope
  delete: [MemberNotificationWhereUniqueInput!]
  deleteMany: [MemberNotificationScalarWhereInput!]
  disconnect: [MemberNotificationWhereUniqueInput!]
  set: [MemberNotificationWhereUniqueInput!]
  update: [MemberNotificationUpdateWithWhereUniqueWithoutNotificationInput!]
  updateMany: [MemberNotificationUpdateManyWithWhereWithoutNotificationInput!]
  upsert: [MemberNotificationUpsertWithWhereUniqueWithoutNotificationInput!]
}

input MemberNotificationUpdateWithWhereUniqueWithoutMemberInput {
  data: MemberNotificationUpdateWithoutMemberInput!
  where: MemberNotificationWhereUniqueInput!
}

input MemberNotificationUpdateWithWhereUniqueWithoutNotificationInput {
  data: MemberNotificationUpdateWithoutNotificationInput!
  where: MemberNotificationWhereUniqueInput!
}

input MemberNotificationUpdateWithoutMemberInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  notification: NotificationUpdateOneWithoutMember_notificationNestedInput
  readAt: NullableDateTimeFieldUpdateOperationsInput
  readYn: NullableStringFieldUpdateOperationsInput
}

input MemberNotificationUpdateWithoutNotificationInput {
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  member: MemberUpdateOneWithoutMember_notificationNestedInput
  readAt: NullableDateTimeFieldUpdateOperationsInput
  readYn: NullableStringFieldUpdateOperationsInput
}

input MemberNotificationUpsertWithWhereUniqueWithoutMemberInput {
  create: MemberNotificationCreateWithoutMemberInput!
  update: MemberNotificationUpdateWithoutMemberInput!
  where: MemberNotificationWhereUniqueInput!
}

input MemberNotificationUpsertWithWhereUniqueWithoutNotificationInput {
  create: MemberNotificationCreateWithoutNotificationInput!
  update: MemberNotificationUpdateWithoutNotificationInput!
  where: MemberNotificationWhereUniqueInput!
}

input MemberNotificationWhereInput {
  AND: [MemberNotificationWhereInput!]
  NOT: [MemberNotificationWhereInput!]
  OR: [MemberNotificationWhereInput!]
  accountId: BigIntNullableFilter
  createdAt: DateTimeNullableFilter
  id: BigIntFilter
  member: MemberRelationFilter
  notification: NotificationRelationFilter
  notificationId: BigIntNullableFilter
  readAt: DateTimeNullableFilter
  readYn: StringNullableFilter
}

input MemberNotificationWhereUniqueInput {
  id: BigInt
}

input MemberOrderByWithAggregationInput {
  _avg: MemberAvgOrderByAggregateInput
  _count: MemberCountOrderByAggregateInput
  _max: MemberMaxOrderByAggregateInput
  _min: MemberMinOrderByAggregateInput
  _sum: MemberSumOrderByAggregateInput
  accountId: SortOrder
  attachFileId: SortOrder
  delYn: SortOrder
  emailRecptnYn: SortOrder
  mbtlnum: SortOrder
  modDt: SortOrder
  modId: SortOrder
  name: SortOrder
  ntvFrnrCd: SortOrder
  pushAlarmYn: SortOrder
  pushRecptnEstbsDt: SortOrder
  regDt: SortOrder
  regId: SortOrder
  secessionDt: SortOrder
  sexdstn: SortOrder
  signupToken: SortOrder
  smsRecptnEstbsDt: SortOrder
  smsRecptnYn: SortOrder
  subscribeDt: SortOrder
  telComCd: SortOrder
}

input MemberOrderByWithRelationInput {
  accountId: SortOrder
  attachFileId: SortOrder
  delYn: SortOrder
  emailRecptnYn: SortOrder
  mbtlnum: SortOrder
  member_device: MemberDeviceOrderByRelationAggregateInput
  member_notification: MemberNotificationOrderByRelationAggregateInput
  modDt: SortOrder
  modId: SortOrder
  name: SortOrder
  ntvFrnrCd: SortOrder
  pushAlarmYn: SortOrder
  pushRecptnEstbsDt: SortOrder
  regDt: SortOrder
  regId: SortOrder
  secessionDt: SortOrder
  sexdstn: SortOrder
  signupToken: SortOrder
  smsRecptnEstbsDt: SortOrder
  smsRecptnYn: SortOrder
  subscribeDt: SortOrder
  telComCd: SortOrder
}

input MemberRelationFilter {
  is: MemberWhereInput
  isNot: MemberWhereInput
}

enum MemberScalarFieldEnum {
  accountId
  attachFileId
  delYn
  emailRecptnYn
  mbtlnum
  modDt
  modId
  name
  ntvFrnrCd
  pushAlarmYn
  pushRecptnEstbsDt
  regDt
  regId
  secessionDt
  sexdstn
  signupToken
  smsRecptnEstbsDt
  smsRecptnYn
  subscribeDt
  telComCd
}

input MemberScalarWhereWithAggregatesInput {
  AND: [MemberScalarWhereWithAggregatesInput!]
  NOT: [MemberScalarWhereWithAggregatesInput!]
  OR: [MemberScalarWhereWithAggregatesInput!]
  accountId: BigIntWithAggregatesFilter
  attachFileId: IntNullableWithAggregatesFilter
  delYn: StringNullableWithAggregatesFilter
  emailRecptnYn: StringNullableWithAggregatesFilter
  mbtlnum: StringNullableWithAggregatesFilter
  modDt: DateTimeNullableWithAggregatesFilter
  modId: IntNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  ntvFrnrCd: StringNullableWithAggregatesFilter
  pushAlarmYn: StringNullableWithAggregatesFilter
  pushRecptnEstbsDt: DateTimeNullableWithAggregatesFilter
  regDt: DateTimeNullableWithAggregatesFilter
  regId: IntNullableWithAggregatesFilter
  secessionDt: DateTimeNullableWithAggregatesFilter
  sexdstn: StringNullableWithAggregatesFilter
  signupToken: StringNullableWithAggregatesFilter
  smsRecptnEstbsDt: DateTimeNullableWithAggregatesFilter
  smsRecptnYn: StringNullableWithAggregatesFilter
  subscribeDt: DateTimeNullableWithAggregatesFilter
  telComCd: StringNullableWithAggregatesFilter
}

type MemberSumAggregate {
  accountId: BigInt
  attachFileId: Int
  modId: Int
  regId: Int
}

input MemberSumOrderByAggregateInput {
  accountId: SortOrder
  attachFileId: SortOrder
  modId: SortOrder
  regId: SortOrder
}

input MemberUpdateInput {
  accountId: BigIntFieldUpdateOperationsInput
  attachFileId: NullableIntFieldUpdateOperationsInput
  delYn: NullableStringFieldUpdateOperationsInput
  emailRecptnYn: NullableStringFieldUpdateOperationsInput
  mbtlnum: NullableStringFieldUpdateOperationsInput
  member_device: MemberDeviceUpdateManyWithoutMemberNestedInput
  member_notification: MemberNotificationUpdateManyWithoutMemberNestedInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  ntvFrnrCd: NullableStringFieldUpdateOperationsInput
  pushAlarmYn: NullableStringFieldUpdateOperationsInput
  pushRecptnEstbsDt: NullableDateTimeFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
  secessionDt: NullableDateTimeFieldUpdateOperationsInput
  sexdstn: NullableStringFieldUpdateOperationsInput
  signupToken: NullableStringFieldUpdateOperationsInput
  smsRecptnEstbsDt: NullableDateTimeFieldUpdateOperationsInput
  smsRecptnYn: NullableStringFieldUpdateOperationsInput
  subscribeDt: NullableDateTimeFieldUpdateOperationsInput
  telComCd: NullableStringFieldUpdateOperationsInput
}

input MemberUpdateManyMutationInput {
  accountId: BigIntFieldUpdateOperationsInput
  attachFileId: NullableIntFieldUpdateOperationsInput
  delYn: NullableStringFieldUpdateOperationsInput
  emailRecptnYn: NullableStringFieldUpdateOperationsInput
  mbtlnum: NullableStringFieldUpdateOperationsInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  ntvFrnrCd: NullableStringFieldUpdateOperationsInput
  pushAlarmYn: NullableStringFieldUpdateOperationsInput
  pushRecptnEstbsDt: NullableDateTimeFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
  secessionDt: NullableDateTimeFieldUpdateOperationsInput
  sexdstn: NullableStringFieldUpdateOperationsInput
  signupToken: NullableStringFieldUpdateOperationsInput
  smsRecptnEstbsDt: NullableDateTimeFieldUpdateOperationsInput
  smsRecptnYn: NullableStringFieldUpdateOperationsInput
  subscribeDt: NullableDateTimeFieldUpdateOperationsInput
  telComCd: NullableStringFieldUpdateOperationsInput
}

input MemberUpdateOneWithoutMember_deviceNestedInput {
  connect: MemberWhereUniqueInput
  connectOrCreate: MemberCreateOrConnectWithoutMember_deviceInput
  create: MemberCreateWithoutMember_deviceInput
  delete: Boolean
  disconnect: Boolean
  update: MemberUpdateWithoutMember_deviceInput
  upsert: MemberUpsertWithoutMember_deviceInput
}

input MemberUpdateOneWithoutMember_notificationNestedInput {
  connect: MemberWhereUniqueInput
  connectOrCreate: MemberCreateOrConnectWithoutMember_notificationInput
  create: MemberCreateWithoutMember_notificationInput
  delete: Boolean
  disconnect: Boolean
  update: MemberUpdateWithoutMember_notificationInput
  upsert: MemberUpsertWithoutMember_notificationInput
}

input MemberUpdateWithoutMember_deviceInput {
  accountId: BigIntFieldUpdateOperationsInput
  attachFileId: NullableIntFieldUpdateOperationsInput
  delYn: NullableStringFieldUpdateOperationsInput
  emailRecptnYn: NullableStringFieldUpdateOperationsInput
  mbtlnum: NullableStringFieldUpdateOperationsInput
  member_notification: MemberNotificationUpdateManyWithoutMemberNestedInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  ntvFrnrCd: NullableStringFieldUpdateOperationsInput
  pushAlarmYn: NullableStringFieldUpdateOperationsInput
  pushRecptnEstbsDt: NullableDateTimeFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
  secessionDt: NullableDateTimeFieldUpdateOperationsInput
  sexdstn: NullableStringFieldUpdateOperationsInput
  signupToken: NullableStringFieldUpdateOperationsInput
  smsRecptnEstbsDt: NullableDateTimeFieldUpdateOperationsInput
  smsRecptnYn: NullableStringFieldUpdateOperationsInput
  subscribeDt: NullableDateTimeFieldUpdateOperationsInput
  telComCd: NullableStringFieldUpdateOperationsInput
}

input MemberUpdateWithoutMember_notificationInput {
  accountId: BigIntFieldUpdateOperationsInput
  attachFileId: NullableIntFieldUpdateOperationsInput
  delYn: NullableStringFieldUpdateOperationsInput
  emailRecptnYn: NullableStringFieldUpdateOperationsInput
  mbtlnum: NullableStringFieldUpdateOperationsInput
  member_device: MemberDeviceUpdateManyWithoutMemberNestedInput
  modDt: NullableDateTimeFieldUpdateOperationsInput
  modId: NullableIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  ntvFrnrCd: NullableStringFieldUpdateOperationsInput
  pushAlarmYn: NullableStringFieldUpdateOperationsInput
  pushRecptnEstbsDt: NullableDateTimeFieldUpdateOperationsInput
  regDt: NullableDateTimeFieldUpdateOperationsInput
  regId: NullableIntFieldUpdateOperationsInput
  secessionDt: NullableDateTimeFieldUpdateOperationsInput
  sexdstn: NullableStringFieldUpdateOperationsInput
  signupToken: NullableStringFieldUpdateOperationsInput
  smsRecptnEstbsDt: NullableDateTimeFieldUpdateOperationsInput
  smsRecptnYn: NullableStringFieldUpdateOperationsInput
  subscribeDt: NullableDateTimeFieldUpdateOperationsInput
  telComCd: NullableStringFieldUpdateOperationsInput
}

input MemberUpsertWithoutMember_deviceInput {
  create: MemberCreateWithoutMember_deviceInput!
  update: MemberUpdateWithoutMember_deviceInput!
}

input MemberUpsertWithoutMember_notificationInput {
  create: MemberCreateWithoutMember_notificationInput!
  update: MemberUpdateWithoutMember_notificationInput!
}

input MemberWhereInput {
  AND: [MemberWhereInput!]
  NOT: [MemberWhereInput!]
  OR: [MemberWhereInput!]
  accountId: BigIntFilter
  attachFileId: IntNullableFilter
  delYn: StringNullableFilter
  emailRecptnYn: StringNullableFilter
  mbtlnum: StringNullableFilter
  member_device: MemberDeviceListRelationFilter
  member_notification: MemberNotificationListRelationFilter
  modDt: DateTimeNullableFilter
  modId: IntNullableFilter
  name: StringNullableFilter
  ntvFrnrCd: StringNullableFilter
  pushAlarmYn: StringNullableFilter
  pushRecptnEstbsDt: DateTimeNullableFilter
  regDt: DateTimeNullableFilter
  regId: IntNullableFilter
  secessionDt: DateTimeNullableFilter
  sexdstn: StringNullableFilter
  signupToken: StringNullableFilter
  smsRecptnEstbsDt: DateTimeNullableFilter
  smsRecptnYn: StringNullableFilter
  subscribeDt: DateTimeNullableFilter
  telComCd: StringNullableFilter
}

input MemberWhereUniqueInput {
  accountId: BigInt
}

type Mutation {
  createManyAttachFile(data: [AttachFileCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyBoard(data: [BoardCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCode(data: [CodeCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCodeGroup(data: [CodeGroupCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMember(data: [MemberCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMemberDevice(data: [MemberDeviceCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMemberNotification(data: [MemberNotificationCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNotification(data: [NotificationCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createOneAttachFile(data: AttachFileCreateInput!): AttachFile!
  createOneBoard(data: BoardCreateInput!): Board!
  createOneCode(data: CodeCreateInput!): Code!
  createOneCodeGroup(data: CodeGroupCreateInput!): CodeGroup!
  createOneMember(data: MemberCreateInput!): Member!
  createOneMemberDevice(data: MemberDeviceCreateInput!): MemberDevice!
  createOneMemberNotification(data: MemberNotificationCreateInput!): MemberNotification!
  createOneNotification(data: NotificationCreateInput!): Notification!
  deleteManyAttachFile(where: AttachFileWhereInput): AffectedRowsOutput!
  deleteManyBoard(where: BoardWhereInput): AffectedRowsOutput!
  deleteManyCode(where: CodeWhereInput): AffectedRowsOutput!
  deleteManyCodeGroup(where: CodeGroupWhereInput): AffectedRowsOutput!
  deleteManyMember(where: MemberWhereInput): AffectedRowsOutput!
  deleteManyMemberDevice(where: MemberDeviceWhereInput): AffectedRowsOutput!
  deleteManyMemberNotification(where: MemberNotificationWhereInput): AffectedRowsOutput!
  deleteManyNotification(where: NotificationWhereInput): AffectedRowsOutput!
  deleteOneAttachFile(where: AttachFileWhereUniqueInput!): AttachFile
  deleteOneBoard(where: BoardWhereUniqueInput!): Board
  deleteOneCode(where: CodeWhereUniqueInput!): Code
  deleteOneCodeGroup(where: CodeGroupWhereUniqueInput!): CodeGroup
  deleteOneMember(where: MemberWhereUniqueInput!): Member
  deleteOneMemberDevice(where: MemberDeviceWhereUniqueInput!): MemberDevice
  deleteOneMemberNotification(where: MemberNotificationWhereUniqueInput!): MemberNotification
  deleteOneNotification(where: NotificationWhereUniqueInput!): Notification
  updateManyAttachFile(data: AttachFileUpdateManyMutationInput!, where: AttachFileWhereInput): AffectedRowsOutput!
  updateManyBoard(data: BoardUpdateManyMutationInput!, where: BoardWhereInput): AffectedRowsOutput!
  updateManyCode(data: CodeUpdateManyMutationInput!, where: CodeWhereInput): AffectedRowsOutput!
  updateManyCodeGroup(data: CodeGroupUpdateManyMutationInput!, where: CodeGroupWhereInput): AffectedRowsOutput!
  updateManyMember(data: MemberUpdateManyMutationInput!, where: MemberWhereInput): AffectedRowsOutput!
  updateManyMemberDevice(data: MemberDeviceUpdateManyMutationInput!, where: MemberDeviceWhereInput): AffectedRowsOutput!
  updateManyMemberNotification(data: MemberNotificationUpdateManyMutationInput!, where: MemberNotificationWhereInput): AffectedRowsOutput!
  updateManyNotification(data: NotificationUpdateManyMutationInput!, where: NotificationWhereInput): AffectedRowsOutput!
  updateOneAttachFile(data: AttachFileUpdateInput!, where: AttachFileWhereUniqueInput!): AttachFile
  updateOneBoard(data: BoardUpdateInput!, where: BoardWhereUniqueInput!): Board
  updateOneCode(data: CodeUpdateInput!, where: CodeWhereUniqueInput!): Code
  updateOneCodeGroup(data: CodeGroupUpdateInput!, where: CodeGroupWhereUniqueInput!): CodeGroup
  updateOneMember(data: MemberUpdateInput!, where: MemberWhereUniqueInput!): Member
  updateOneMemberDevice(data: MemberDeviceUpdateInput!, where: MemberDeviceWhereUniqueInput!): MemberDevice
  updateOneMemberNotification(data: MemberNotificationUpdateInput!, where: MemberNotificationWhereUniqueInput!): MemberNotification
  updateOneNotification(data: NotificationUpdateInput!, where: NotificationWhereUniqueInput!): Notification
  upsertOneAttachFile(create: AttachFileCreateInput!, update: AttachFileUpdateInput!, where: AttachFileWhereUniqueInput!): AttachFile!
  upsertOneBoard(create: BoardCreateInput!, update: BoardUpdateInput!, where: BoardWhereUniqueInput!): Board!
  upsertOneCode(create: CodeCreateInput!, update: CodeUpdateInput!, where: CodeWhereUniqueInput!): Code!
  upsertOneCodeGroup(create: CodeGroupCreateInput!, update: CodeGroupUpdateInput!, where: CodeGroupWhereUniqueInput!): CodeGroup!
  upsertOneMember(create: MemberCreateInput!, update: MemberUpdateInput!, where: MemberWhereUniqueInput!): Member!
  upsertOneMemberDevice(create: MemberDeviceCreateInput!, update: MemberDeviceUpdateInput!, where: MemberDeviceWhereUniqueInput!): MemberDevice!
  upsertOneMemberNotification(create: MemberNotificationCreateInput!, update: MemberNotificationUpdateInput!, where: MemberNotificationWhereUniqueInput!): MemberNotification!
  upsertOneNotification(create: NotificationCreateInput!, update: NotificationUpdateInput!, where: NotificationWhereUniqueInput!): Notification!
}

input NestedBigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input NestedBigIntNullableFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableFilter
  notIn: [BigInt!]
}

input NestedBigIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedBigIntNullableFilter
  _min: NestedBigIntNullableFilter
  _sum: NestedBigIntNullableFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableWithAggregatesFilter
  notIn: [BigInt!]
}

input NestedBigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Notification {
  _count: NotificationCount
  content: String
  createdAt: DateTime
  id: BigInt!
  link: String
  member_notification(cursor: MemberNotificationWhereUniqueInput, distinct: [MemberNotificationScalarFieldEnum!], orderBy: [MemberNotificationOrderByWithRelationInput!], skip: Int, take: Int, where: MemberNotificationWhereInput): [MemberNotification!]!
  title: String
}

type NotificationAvgAggregate {
  id: Float
}

input NotificationAvgOrderByAggregateInput {
  id: SortOrder
}

type NotificationCount {
  member_notification: Int!
}

type NotificationCountAggregate {
  _all: Int!
  content: Int!
  createdAt: Int!
  id: Int!
  link: Int!
  title: Int!
}

input NotificationCountOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  link: SortOrder
  title: SortOrder
}

input NotificationCreateInput {
  content: String
  createdAt: DateTime
  id: BigInt
  link: String
  member_notification: MemberNotificationCreateNestedManyWithoutNotificationInput
  title: String
}

input NotificationCreateManyInput {
  content: String
  createdAt: DateTime
  id: BigInt
  link: String
  title: String
}

input NotificationCreateNestedOneWithoutMember_notificationInput {
  connect: NotificationWhereUniqueInput
  connectOrCreate: NotificationCreateOrConnectWithoutMember_notificationInput
  create: NotificationCreateWithoutMember_notificationInput
}

input NotificationCreateOrConnectWithoutMember_notificationInput {
  create: NotificationCreateWithoutMember_notificationInput!
  where: NotificationWhereUniqueInput!
}

input NotificationCreateWithoutMember_notificationInput {
  content: String
  createdAt: DateTime
  id: BigInt
  link: String
  title: String
}

type NotificationGroupBy {
  _avg: NotificationAvgAggregate
  _count: NotificationCountAggregate
  _max: NotificationMaxAggregate
  _min: NotificationMinAggregate
  _sum: NotificationSumAggregate
  content: String
  createdAt: DateTime
  id: BigInt!
  link: String
  title: String
}

type NotificationMaxAggregate {
  content: String
  createdAt: DateTime
  id: BigInt
  link: String
  title: String
}

input NotificationMaxOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  link: SortOrder
  title: SortOrder
}

type NotificationMinAggregate {
  content: String
  createdAt: DateTime
  id: BigInt
  link: String
  title: String
}

input NotificationMinOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  link: SortOrder
  title: SortOrder
}

input NotificationOrderByWithAggregationInput {
  _avg: NotificationAvgOrderByAggregateInput
  _count: NotificationCountOrderByAggregateInput
  _max: NotificationMaxOrderByAggregateInput
  _min: NotificationMinOrderByAggregateInput
  _sum: NotificationSumOrderByAggregateInput
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  link: SortOrder
  title: SortOrder
}

input NotificationOrderByWithRelationInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  link: SortOrder
  member_notification: MemberNotificationOrderByRelationAggregateInput
  title: SortOrder
}

input NotificationRelationFilter {
  is: NotificationWhereInput
  isNot: NotificationWhereInput
}

enum NotificationScalarFieldEnum {
  content
  createdAt
  id
  link
  title
}

input NotificationScalarWhereWithAggregatesInput {
  AND: [NotificationScalarWhereWithAggregatesInput!]
  NOT: [NotificationScalarWhereWithAggregatesInput!]
  OR: [NotificationScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  createdAt: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  link: StringNullableWithAggregatesFilter
  title: StringNullableWithAggregatesFilter
}

type NotificationSumAggregate {
  id: BigInt
}

input NotificationSumOrderByAggregateInput {
  id: SortOrder
}

input NotificationUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  member_notification: MemberNotificationUpdateManyWithoutNotificationNestedInput
  title: NullableStringFieldUpdateOperationsInput
}

input NotificationUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
}

input NotificationUpdateOneWithoutMember_notificationNestedInput {
  connect: NotificationWhereUniqueInput
  connectOrCreate: NotificationCreateOrConnectWithoutMember_notificationInput
  create: NotificationCreateWithoutMember_notificationInput
  delete: Boolean
  disconnect: Boolean
  update: NotificationUpdateWithoutMember_notificationInput
  upsert: NotificationUpsertWithoutMember_notificationInput
}

input NotificationUpdateWithoutMember_notificationInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
}

input NotificationUpsertWithoutMember_notificationInput {
  create: NotificationCreateWithoutMember_notificationInput!
  update: NotificationUpdateWithoutMember_notificationInput!
}

input NotificationWhereInput {
  AND: [NotificationWhereInput!]
  NOT: [NotificationWhereInput!]
  OR: [NotificationWhereInput!]
  content: StringNullableFilter
  createdAt: DateTimeNullableFilter
  id: BigIntFilter
  link: StringNullableFilter
  member_notification: MemberNotificationListRelationFilter
  title: StringNullableFilter
}

input NotificationWhereUniqueInput {
  id: BigInt
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  aggregateAttachFile(cursor: AttachFileWhereUniqueInput, orderBy: [AttachFileOrderByWithRelationInput!], skip: Int, take: Int, where: AttachFileWhereInput): AggregateAttachFile!
  aggregateBoard(cursor: BoardWhereUniqueInput, orderBy: [BoardOrderByWithRelationInput!], skip: Int, take: Int, where: BoardWhereInput): AggregateBoard!
  aggregateCode(cursor: CodeWhereUniqueInput, orderBy: [CodeOrderByWithRelationInput!], skip: Int, take: Int, where: CodeWhereInput): AggregateCode!
  aggregateCodeGroup(cursor: CodeGroupWhereUniqueInput, orderBy: [CodeGroupOrderByWithRelationInput!], skip: Int, take: Int, where: CodeGroupWhereInput): AggregateCodeGroup!
  aggregateMember(cursor: MemberWhereUniqueInput, orderBy: [MemberOrderByWithRelationInput!], skip: Int, take: Int, where: MemberWhereInput): AggregateMember!
  aggregateMemberDevice(cursor: MemberDeviceWhereUniqueInput, orderBy: [MemberDeviceOrderByWithRelationInput!], skip: Int, take: Int, where: MemberDeviceWhereInput): AggregateMemberDevice!
  aggregateMemberNotification(cursor: MemberNotificationWhereUniqueInput, orderBy: [MemberNotificationOrderByWithRelationInput!], skip: Int, take: Int, where: MemberNotificationWhereInput): AggregateMemberNotification!
  aggregateNotification(cursor: NotificationWhereUniqueInput, orderBy: [NotificationOrderByWithRelationInput!], skip: Int, take: Int, where: NotificationWhereInput): AggregateNotification!
  attachFile(where: AttachFileWhereUniqueInput!): AttachFile
  attachFiles(cursor: AttachFileWhereUniqueInput, distinct: [AttachFileScalarFieldEnum!], orderBy: [AttachFileOrderByWithRelationInput!], skip: Int, take: Int, where: AttachFileWhereInput): [AttachFile!]!
  board(where: BoardWhereUniqueInput!): Board
  boards(cursor: BoardWhereUniqueInput, distinct: [BoardScalarFieldEnum!], orderBy: [BoardOrderByWithRelationInput!], skip: Int, take: Int, where: BoardWhereInput): [Board!]!
  code(where: CodeWhereUniqueInput!): Code
  codeGroup(where: CodeGroupWhereUniqueInput!): CodeGroup
  codeGroups(cursor: CodeGroupWhereUniqueInput, distinct: [CodeGroupScalarFieldEnum!], orderBy: [CodeGroupOrderByWithRelationInput!], skip: Int, take: Int, where: CodeGroupWhereInput): [CodeGroup!]!
  codes(cursor: CodeWhereUniqueInput, distinct: [CodeScalarFieldEnum!], orderBy: [CodeOrderByWithRelationInput!], skip: Int, take: Int, where: CodeWhereInput): [Code!]!
  findFirstAttachFile(cursor: AttachFileWhereUniqueInput, distinct: [AttachFileScalarFieldEnum!], orderBy: [AttachFileOrderByWithRelationInput!], skip: Int, take: Int, where: AttachFileWhereInput): AttachFile
  findFirstBoard(cursor: BoardWhereUniqueInput, distinct: [BoardScalarFieldEnum!], orderBy: [BoardOrderByWithRelationInput!], skip: Int, take: Int, where: BoardWhereInput): Board
  findFirstCode(cursor: CodeWhereUniqueInput, distinct: [CodeScalarFieldEnum!], orderBy: [CodeOrderByWithRelationInput!], skip: Int, take: Int, where: CodeWhereInput): Code
  findFirstCodeGroup(cursor: CodeGroupWhereUniqueInput, distinct: [CodeGroupScalarFieldEnum!], orderBy: [CodeGroupOrderByWithRelationInput!], skip: Int, take: Int, where: CodeGroupWhereInput): CodeGroup
  findFirstMember(cursor: MemberWhereUniqueInput, distinct: [MemberScalarFieldEnum!], orderBy: [MemberOrderByWithRelationInput!], skip: Int, take: Int, where: MemberWhereInput): Member
  findFirstMemberDevice(cursor: MemberDeviceWhereUniqueInput, distinct: [MemberDeviceScalarFieldEnum!], orderBy: [MemberDeviceOrderByWithRelationInput!], skip: Int, take: Int, where: MemberDeviceWhereInput): MemberDevice
  findFirstMemberNotification(cursor: MemberNotificationWhereUniqueInput, distinct: [MemberNotificationScalarFieldEnum!], orderBy: [MemberNotificationOrderByWithRelationInput!], skip: Int, take: Int, where: MemberNotificationWhereInput): MemberNotification
  findFirstNotification(cursor: NotificationWhereUniqueInput, distinct: [NotificationScalarFieldEnum!], orderBy: [NotificationOrderByWithRelationInput!], skip: Int, take: Int, where: NotificationWhereInput): Notification
  groupByAttachFile(by: [AttachFileScalarFieldEnum!]!, having: AttachFileScalarWhereWithAggregatesInput, orderBy: [AttachFileOrderByWithAggregationInput!], skip: Int, take: Int, where: AttachFileWhereInput): [AttachFileGroupBy!]!
  groupByBoard(by: [BoardScalarFieldEnum!]!, having: BoardScalarWhereWithAggregatesInput, orderBy: [BoardOrderByWithAggregationInput!], skip: Int, take: Int, where: BoardWhereInput): [BoardGroupBy!]!
  groupByCode(by: [CodeScalarFieldEnum!]!, having: CodeScalarWhereWithAggregatesInput, orderBy: [CodeOrderByWithAggregationInput!], skip: Int, take: Int, where: CodeWhereInput): [CodeGroupBy!]!
  groupByCodeGroup(by: [CodeGroupScalarFieldEnum!]!, having: CodeGroupScalarWhereWithAggregatesInput, orderBy: [CodeGroupOrderByWithAggregationInput!], skip: Int, take: Int, where: CodeGroupWhereInput): [CodeGroupGroupBy!]!
  groupByMember(by: [MemberScalarFieldEnum!]!, having: MemberScalarWhereWithAggregatesInput, orderBy: [MemberOrderByWithAggregationInput!], skip: Int, take: Int, where: MemberWhereInput): [MemberGroupBy!]!
  groupByMemberDevice(by: [MemberDeviceScalarFieldEnum!]!, having: MemberDeviceScalarWhereWithAggregatesInput, orderBy: [MemberDeviceOrderByWithAggregationInput!], skip: Int, take: Int, where: MemberDeviceWhereInput): [MemberDeviceGroupBy!]!
  groupByMemberNotification(by: [MemberNotificationScalarFieldEnum!]!, having: MemberNotificationScalarWhereWithAggregatesInput, orderBy: [MemberNotificationOrderByWithAggregationInput!], skip: Int, take: Int, where: MemberNotificationWhereInput): [MemberNotificationGroupBy!]!
  groupByNotification(by: [NotificationScalarFieldEnum!]!, having: NotificationScalarWhereWithAggregatesInput, orderBy: [NotificationOrderByWithAggregationInput!], skip: Int, take: Int, where: NotificationWhereInput): [NotificationGroupBy!]!
  member(where: MemberWhereUniqueInput!): Member
  memberDevice(where: MemberDeviceWhereUniqueInput!): MemberDevice
  memberDevices(cursor: MemberDeviceWhereUniqueInput, distinct: [MemberDeviceScalarFieldEnum!], orderBy: [MemberDeviceOrderByWithRelationInput!], skip: Int, take: Int, where: MemberDeviceWhereInput): [MemberDevice!]!
  memberNotification(where: MemberNotificationWhereUniqueInput!): MemberNotification
  memberNotifications(cursor: MemberNotificationWhereUniqueInput, distinct: [MemberNotificationScalarFieldEnum!], orderBy: [MemberNotificationOrderByWithRelationInput!], skip: Int, take: Int, where: MemberNotificationWhereInput): [MemberNotification!]!
  members(cursor: MemberWhereUniqueInput, distinct: [MemberScalarFieldEnum!], orderBy: [MemberOrderByWithRelationInput!], skip: Int, take: Int, where: MemberWhereInput): [Member!]!
  notification(where: NotificationWhereUniqueInput!): Notification
  notifications(cursor: NotificationWhereUniqueInput, distinct: [NotificationScalarFieldEnum!], orderBy: [NotificationOrderByWithRelationInput!], skip: Int, take: Int, where: NotificationWhereInput): [Notification!]!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input codeCodeGroupIdIdCompoundUniqueInput {
  codeGroupId: String!
  id: String!
}
